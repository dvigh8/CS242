import java.io.*;
import java.util.*;
/** @author David Josephs
* CS242
	@since 2015-10-28
*/
public class FileEncryptor{
	
	SimpleEncryptor encrypt = new SimpleEncryptor();
	
	/** Encrypts the given file
		<p>
		This will take the encryptFile and set everything in it equal to a String using a Scanner. It then uses SimpleEncryptor textEncrypt to encrypt the string.
		This string will then be writen to the output file.
		</p>
		@param encryptFile The file to be encrypted.
		@param outputFile Where the encrypted content of encryptFile is saved to.
		@param key The encryption key can be generated by fileEncryptKey.
		*/
	public void fileEncrypt(File encryptFile, File outputFile, byte key){
		try {
			String text = new String();
			text = new Scanner(encryptFile).useDelimiter("\\A").next();
			encrypt.textEncrypt(text,key);
			
			File output = outputFile;
			BufferedWriter w = new BufferedWriter(new FileWriter(output));
			w.write(encrypt.encrypted);
			w.close();
		}
		catch (IOException e) {
			System.err.println("Caught IOException: " + e.getMessage());
		}
	}
	/** Decrypts the given file
		<p>
		This will take the decryptFile and set everything in it equal to a String using a Scanner. It then uses SimpleEncryptor textDecrypt and a decryption key to decrypt the string.
		This string will then be writen to the output file.
		</p>
		@param decryptFile The file to be decrypted.
		@param outputFile Where the encrypted content of decryptFile is saved to.
		@param key The encryption key provided by the user.
		*/
	
	public void fileDecrypt(File decryptFile, File outputFile, byte key){
		try {
			String text = new String();
			text = new Scanner(decryptFile).useDelimiter("\\A").next();
			encrypt.textDecrypt(text,key);
			
			File output = outputFile;
			BufferedWriter w = new BufferedWriter(new FileWriter(output));
			w.write(encrypt.encrypted);
			w.close();
		}
		catch (IOException e) {
			System.err.println("Caught IOException: " + e.getMessage());
		}
	}
	/**
		Generates the byte that is used as the encryption key.
		@param f Any file.
		@return Returns the length of the file mod 128 cast to a byte.
		*/
	public static byte fileEncryptKey(File f){
		return (byte)((int)f.length() % 128);
	}
}